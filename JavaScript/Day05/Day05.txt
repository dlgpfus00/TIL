    배열
      고차함수, 콜백함수

      자바스크립트의 배열은 가짜입니다. 자바스크립트에서의 배열은 인덱스라는 키와
      해당 인덱스의 키에 값으로 구성된 객체를 말합니다.

      순서가 보장된 데이터들의 집단

      const 와르르멘션 = ["짱구", {짱아, 짱구네가족}, "오수", {남편, 아내}, "옆집아줌마"]
      와르르멘션[0] // 짱구
      와르르멘션[4] // 옆집아줌마
      와르르멘션[2] = ""
      와로르멘션[2] // ""

      와로르멘션.splice(2)
      와르르멘션[2] // 남편, 아내

      객체는 순서가 없기 때문에 순회 반복이 불가능
      배열은 순서가 존재하기 때문에 순회 반복이 가능

      객체는 키 값이 중복되지 않습니다.
      배열은 인덱스 값이 키 값이 되어 0부터 순차적으로 증가

  ---------------------------------------------------------------------------------------

배열의 내장함수와 고차함수

        내장함수 (원본배열, 복사본, 반환 값의 유무)
          push() 
              ()안의 데이터를 원본 배열(arr)의 맨 끝 요소(el)로 추가
              ex) arr=["짱구","흰둥이"]
                  arr.push("신형만")
                  console.log(arr) //["짱구","흰둥이","신형만]


          pop()
              원본 배열의 맨 끝 요소를 제거, 제거된 요소를 반환

              ex) const arr = [1,2,3,4]
                  const a = arr.pop()
                  console.log(arr) // [1, 2, 3]
                  console.log(a) // 4

          unshift()
              ()안의 데이터를 원본 배열의 맨 앞에 추가

          shift
              원본 배열의 맨 앞에 요소를 제거, 제거된 요소를 반환

          concat(arr1, arr2)
              ()안의 두 배열을 합친 하나의 복사본 배열을 반환

              arr1=[1,2,3,4,5] arr2=[1,2,3,4]
              [1,2,3,4,5,1,2,3,4]

              ex) 

          join
              배열 요소 사이에 원하는 문자를 삽입한 문자열을 반환
              ex) [1, 2, 3, 4, 5].join("-") => "1-2-3-4-5"
                  [1,2,3,4,5].join() => "12345"
                  ["<div>", ... ].join() => "<div></div>
                                             <div></div>" 

          reverse
              원본 배열 역순 배치
              ex) [1,2,3,4,5] -> [5,4,3,2,1]

          splice(start, count, item)
            - start부터 시작하는 인덱스 번호부터 count만큼 원본 배열에 요소를 제거
            - 제거한 부분에 item을 대체할 수 있음
            - 배열의 특정 부분을 제거

            const arr = [1, 2, 3, 4, 5, 6, 7]
            arr.splice(3, 3, "hello")
            (1, 2, 3, hello , 7)
            
          slice(start, end)
            - 원본 배열의 데이터를 삭제하지는 않으나, start부터 end 직전까지(포함x)
            - 잘라서 복사본으로 반환
            - 배열의 특정 부분을 복사

                      indexOf
          includes
----------------------------------------------------------------------------------------------
콜백함수   ????
  부모 함수의 인자로 함수가 전달, 그러나 해당 함수의 실행은 
  부모 함수에 의해서 실행되고 매개변수도 부모함수에서 전달 받는다.

function 부모함수(자식함수){
  자식함수("안녕하세요")
}

부모함수(()=>{})

----------------------------------------------------------------------------------------------
고차함수   //for문과 비슷하다고 생각하기 ㅏ차이는 새로운 배열이 반환된다 map은
  map
    배열을 순회하며(순서대로 반복) 각 요소에 대하여 인자로 주어진
    *콜백함수의 반환 값으로 새로운 배열을 생성 *

    ex) 
    arr=[1,2,3,4,5]  //map - > 하나씩 다 볼거야 
      arr2= arr.map((el,index,origin)=>{
        return el +1 
      })

----------------------------------------------------------------------------------------------
  filter
    arr=[1,2,3.4.5]    
    const arr2 = arr.filter(el=>el !==5) //1,2,3,4
    //특정 조건에 맞는 요소들만 선택하여 새로운 배열이 필요할때
    //특정한 데이터를 삭제하는 용도로 쓰임 
----------------------------------------------------------------------------------------------

  find
    배열순회, 콜백 함수, 조건식에 맞는 첫번째 요소 반환
    내가 찾고자 하는 특정 요소를 찾을 때 -> find
    내가 찾고자 하는 특정 조건을 만족하는 여러 요소를 찾을 때 -> filter
    
  findIndex
    배열 순회, 콜백 함수, 조건식에 맞는 첫번째 요소의 인덱스 반환 
    값이 없다면 -1

    ex) 
      const post =[
        {
          id:1,
          content:'내용',
          user:{
            nickname:"이혜련"
          }
        },
        {
          id:2,
          content:'내용',
          user:{
            nickname:"이혜련"
          }
        },
        {id:3,
          content:'내용',
          user:{
            nickname:"이혜련"
          }}
      ]

 1)     const fintPost = posts.find((el)=> el.id===3)
      findPost.content = "수정 내용"

 2)     const findpostindex = posts.findidex((el)=> el.id===3)
      findPost[findpostindex]= "수정 내용"

   1과 2는 같은 예시임 
    2는 인덱스 번호를 사용해서    


  reduce
  every
  some
  sort

  
  