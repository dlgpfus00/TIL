1. addEventListener
    자바스크립트에서 특정 요소에 이벤트를 등록할 때 가장 권장되는 방식 
    하나의 요소에 여러개의 이벤트 등록 간으 ==> 중복 이벤트 등록 가능 

    ex) 
        DOM(document, window).addEventListener("이벤트명",콜백함수,option)
        ->콜백함수 : 해당 이벤트가 일어났을 때 내가 실행시키고 싶은 함수 
                => addEventListener 함수에 인자로 들어가고 
                    addEventListener가 실행시켜주니까,, 콜백함수임
                    해당 콜백함수는 인자로 event를 받아올 수 있음 
                    document.querySelector(html요소 중 내가 원하는 요소 찾기)


const print = (e)=>{
    console.log(e.target)
    //addEventListener의 콜백함수에 인자로 받아오는 event의 target은 
    //이벤트가 일어난 대상을 의미한다
}
document.addEventListener("click",print) //기명함수
document.addEventListener("click",(e)=>{
    console.log(e.target)
})
//재사용되거나, 로직이 길 때 => 기명함수, 한번 쓰고 말거면 익명함수

      자주 사용하는 이벤트명

      click : 요소 클릭
      mouseover : 요소에 마우스 올렸을 때
      mousedown : 요소에서 마우스를 누르고 있는 중
      mouseleave : 요소에 마우스 떠났을 때
      mouseup : 요소에서 마우스를 눌렀다가 땠을 때
      mousewheal : 요소 안에서 마우스가 움직일 때 마다

      focus : 인풋이 활성화 되어있을 때
      blur : 활성화 되었다가 비활성화 되었을 떄 
      keypress : 키를 입력했을 때
      keyup : 키를 누르고 있다 땐 순간
      keydown : 키를 누른 상태
      change(oninput) : input의 값이 변경되었을 때
      invalid : input의 조건을 어겼을 때
      (https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event)


2. 캡쳐링, 버블링
    이벤트 전파
        -자식을 클릭했는데 부모가 클릭되거나 부모를 클릭했는데 자식이 클릭되는 현상
    
    버블링 
        자식 요소를 클릭하였을 때 이벤트가 부모 요소로 전파

    캡쳐링(false)
        부모 요소를 클릭하였을 때 자식 요소로 전퍼 

3. 배너 이벤트, 스크롤 이벤트 , 메뉴 이벤트 등 .. 
    -disk(과제)

4.mocking data(가상 데이터) -백엔드에게 이런 데이터가 왔다는 가정 하에 ui그린다...

-----------------------------------------------------------------------------------------

1. promise, async/await, 비동기

2. fetch, axios


