-----------------------------------------------------------------
서버: 외부에서도 접근 가능하도록 한 컴퓨터
프론트엔드: 웹사이트 접속 -> 리소스 전달 = 사용자가 보는 화면
	  데이터를 화면에 어떻게 하면 더 빨리 보여줄 수 있을지 고민

백엔드: 클라이언트의 요청 -> 데이터베이스 접근 -> CRUD(Create Read Update Delete)
       백엔드는 다양한 서버와 소통할 수 있으므로 연산 과정을 최소화 -> 서버 비용
-----------------------------------------------------------------
기획자, 디자이너, 퍼블리셔, 프론트엔드

요구사항 정의(노션) / WF -> 회의 -> 디자이너 디자인(피그마) -> 
요구 사항 분석 -> 스프린트

-----------------------------------------------------------------

요청과 응답
request, response (req, res)

웹브라우저
(요청)--------------------------> 프론트서버
내가 해당 url에 접속했으니 그 페이지에 맞는 화면 요청
     <--------------------------
	     해당 페이지에 맞는 리소스

http
인터넷 상에서 데이터를 주고 받을 때 사용하는 규약, 규칙
https://www.naver.com

HTTP requset message
HTTP response message

's'의 유무는 보안적 요소의 추가, SSL 인증서 유무

-----------------------------------------------------------------

VScode
	코드 에디터 툴
	html은 메모장이나 어디에서든 작성할 수 있지만 불편함
	자동완성, 자동줄바꿈, 플러그인를 제공하는 에디터를 자주 사용함

	웹스톰, vscode
	
 	https://code.visualstudio.com/download

-----------------------------------------------------------------

HTML이란?
	Hyper Text Markup Language

	Hyper Text
		: 단순한 텍스트를 초월하여 다른 페이지의 텍스트 혹은 이미지와 같은 모든 리소스에
		접근할 수 있도록 하는 것

	Markup Language
		: 웹 페이지에 컨텐츠를 어떻게 표현할지 명령하는 언어

	--> 웹 페이지의 이동, 이미지, 동영상에 접근할 수 있게 해주고 웹 페이지 컨텐츠 제작하는 언어
	--> 웹 페이지 만들 때 쓰는 언어

	 주의사항
	 	: HTML은 단순 텍스트나 이미지 등을 표기할 뿐, 스타일링 되어있지는 않음

	 특징
	 	: 태그형태를 띄고 있음
			Tag, 해당 태그는 이러한 특징을 가진 요소(element)다

			<태그명 속성명="속성값"> ...(내용) </태그명>
			<태그명 /> -- 단일태그

			ex)
				<div id="menu_list" style="width:300px"> ... </div>
		
----------------------------------------------------------------------------------------

	html의 구조

	<html> -- 최상위 태그 (html입니다)
		<head>
			-- 해당 페이지의 정보, 창 타이틀, 검색 엔진 수집 정보, favicon, 미리보기
		</head>
		<body>
			-- 사용자 화면에 노출되는 곳, 직접 코드를 작성하게 될 곳
		</body>
	</html>

----------------------------------------------------------------------------------------

	vscode 플러그인(확장 프로그램 = 편리한 기능) 설치
	
	korean language pack for visual studio code // 우리나라 말 패치
	Live server, Live preview // 여러분이 코드를 수정하거나 작성할 때마다 리빌드를 하지 않고
														// 실시간으로 수정된 상태의 페이지를 확인할 수 있는 가상 웹서버
	auto rename tag
			<div></div> -> <h2></div> -> <h2></h2>
			시작 태그를 바꾸면 종료 태그도 알아서 바꿔주는 플러그인

	prettier-code-formatter // 아직 안 쓸거
			띄어쓰기, 탭, 자동 정렬 즉 코드를 형식에 맞춰 예쁘게 포멧을 일치시켜주는 플러그인
			* 향후에는 해당 규칙을 모든 팀원이 일치화시켜 하나의 컨벤션으로 사용
			----> 모든 팀원이 동일한 코드 형태 (줄바꿈, 띄어쓰기, 탭)

----------------------------------------------------------------------------------------

HTML에서 가장 자주 사용되는 요소

얖
<div> .. </div>
	- 빈도는 가장 높을 수 밖에 없음
	- 하나의 구역

<input />
	- 입력 태그
	- 텍스트 박스
	ex) 아이디, 비밀번호, 검색, 체크박스

<p> ... </p>
	- 한 줄 단위의 글을 작성
	- 위 아래 여백(기본속성), 나중에 초기화

<span> ... </span>
	- 특정 구간을 분간, 단어 선택
	ex) 
		<p>안녕하세요 여러분, 저의 이름은 <span>김성용</span>입니다</p>

 <img/>
 <video/>
 <audio/>

		이미지와 동영상, 소리 등을 위한 미디어 요소

	<h1~h6>...</h1~h6>
		
		제목을 나타내는 요소(각 숫자에 맞게 폰트 굵기, 위아래 여백)
		h1이 제일 크고 h6이 제일 작지만 css로 수정 가능

----------------------------------------------------------------------------------------

https://developer.mozilla.org/ko/docs/Web/HTML

1년 7개월 16일 (주니어)

백엔드
스프링, 스프링부트
객체지향, solid, 디자인패턴
빅데이터 트래픽 처리
aws 클라우드
사이드 프로젝트 (커리어리, 인프런 ,비사이드)
웹 동아리, 연합회
자격증 준비 (sqld, 정처기, aws, 리눅스2급)


----------------------------------------------------------------------------------------
23.07.22
	<a>..</a>
		링크, 페이지 이동 
		<a href= "URL 주소"> 
		ex)하이퍼 링크, 메뉴 클릭시 다른 페이지로 이동, 책갈피(네비게이션)

	<select>  (드롭다운 메뉴)
		<option>...</option>
	</select>
	
		ex) 이메일로 회원가입 할 때 이메일 양식을 선택할 수 있는 메뉴 

	<button>...</button>
		버튼 
		이벤트를 일으킨다? 발생한 행위를 정의한다 
		예를들어 버튼을 눌렀을때 로그인이 되는 것--> 로그인 이벤트
		submit, button --> submit은 아직 몰라도 됨 버튼에 2가지 종류가 있다는 것만 알기 

	<label>...</label>
		묶어주는 태그, 분류 용도로 사용 
		ex) 함께 묶여있으면 라벨을 클릭해도 해당 요소가 클릭되는 효과 

	<ul>
		<li>
		</li>
	</ul>

	리스트 태그

	시멘틱 웹태그 
		SEO(검색엔진 최적화)
		전세계에 만들어져있는 웹 문서가 증가함에 따라 검색 엔진이 정확하게 가치 있는 정보를 탐색하기 위해 
		요구하는 사항이 늘어날 수 밖에 없음 

		따라서 검색 엔진에서 정보를 수집하는 로봇이 웹 사이트에서 더 정확한 정보를 수집할 수 있도록
		요소에 이름을 붙여주어 역할을 부여하는 것 
			=> 수집 더 잘되게 역할 부여

		장점
			1. 웹 접근성 
				남녀노소, 몸이 불편하신 분들도 웹 사이트 이용애 있어서 어떠한 차별 없이
				평등하게 이용할 수 있도록 접근성을 높이는 것 

			2. 검색 엔진 최적화 
				포털사이트(검색사이트)의 자체 알고리즘을 갖춘 수집 로봇이 해당 페이지의 키워드를 추출하는데 있어 
				더 정확한 정보를 전달하여 상위 문서에 노출할 수 있도록 
			
			3. 가독성 
				1.
					<!--header-->
					<div>
					...
					</div>
					<!--container-->
					<div>
					...
					</div>
					<!--footer-->
					<div>
					...
					</div>

				2.
					<header>...</header>
					<main>...</main>
					<footer>...</footer>

				2가 더 가독성 있음 